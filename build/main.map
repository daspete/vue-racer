{"version":3,"sources":["webpack:///webpack/bootstrap 5f6478e758c35e0d3fb7","webpack:///./tools/spritemaker.js","webpack:///external \"image-data-uri\"","webpack:///external \"fs\""],"names":["SpriteMaker","constructor","settings","files","sprites","Start","ScanDir","spriteDirectory","ConvertImages","i","length","spritemapName","path","split","slice","spriteName","filename","join","sprite","Convert","err","console","log","fs","writeFileSync","JSON","stringify","imageDataURI","encodeFromFile","dir","filelist","readdirSync","forEach","file","statSync","isDirectory","push","spriteMaker"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 5f6478e758c35e0d3fb7","import imageDataURI from 'image-data-uri'\r\nimport fs from 'fs'\r\n\r\n\r\n\r\nclass SpriteMaker {\r\n    constructor(settings) {\r\n        this.settings = settings;\r\n\r\n        this.files = []\r\n        this.sprites = {}\r\n\r\n        this.Start()\r\n    }\r\n\r\n    async Start() {\r\n        this.files = this.ScanDir(this.settings.spriteDirectory)\r\n\r\n        await this.ConvertImages(this.files)\r\n    }\r\n\r\n    async ConvertImages(files){\r\n        let sprites = {}\r\n\r\n        for(let i = 0; i < files.length; i++){\r\n            try {\r\n                let spritemapName = files[i].path.split('/').slice(-2)[0]\r\n                let spriteName = files[i].filename.split('.').slice(0, -1).join('.')\r\n                \r\n                let sprite = await this.Convert(files[i].path + files[i].filename)\r\n\r\n                if(typeof sprites[spritemapName] === 'undefined'){\r\n                    sprites[spritemapName] = {}\r\n                }\r\n\r\n                sprites[spritemapName][spriteName] = sprite\r\n            }catch(err){\r\n                console.log(err)\r\n            }\r\n        }\r\n\r\n        await fs.writeFileSync('./src/sprites/spritesheet.json', JSON.stringify(sprites))\r\n    }\r\n\r\n    async Convert(path) {\r\n        return await imageDataURI.encodeFromFile(path)\r\n    }\r\n\r\n    ScanDir(dir, filelist) {\r\n        let files = fs.readdirSync(dir);\r\n\r\n        filelist = filelist || [];\r\n        \r\n        files.forEach((file) => {\r\n            if (fs.statSync(dir + file).isDirectory()) {\r\n                filelist = this.ScanDir(dir + file + '/', filelist);\r\n            }\r\n            else {\r\n                filelist.push({\r\n                    path: dir,\r\n                    filename: file\r\n                });\r\n            }\r\n        });\r\n        return filelist;\r\n    }\r\n}\r\n\r\nlet spriteMaker = new SpriteMaker({\r\n    spriteDirectory: './src/assets/'\r\n})\n\n\n// WEBPACK FOOTER //\n// ./tools/spritemaker.js","module.exports = require(\"image-data-uri\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"image-data-uri\"\n// module id = 2\n// module chunks = 0","module.exports = require(\"fs\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"fs\"\n// module id = 3\n// module chunks = 0"],"sourceRoot":""}